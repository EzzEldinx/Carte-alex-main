# docker-compose.yml (Final Version with Volume Mount)

services:
  app:
    build: .
    container_name: cartalex_app
    ports:
      - "3000:3000"
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - db
    environment:
      - NODE_ENV=development
      - DB_HOST=db
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
    restart: unless-stopped

  db:
    image: postgis/postgis:13-3.1
    container_name: cartalex_db
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./db-init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d cartalex_basileia_3857"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  tegola:
    image: gospatial/tegola:v0.21.2
    container_name: cartalex_tegola
    ports:
      - "8080:8080"
    command: serve --config /etc/tegola/config.toml
    # This line forces the container to use your local file, bypassing all caches.
    volumes:
      - ./tegola/tegola.toml:/etc/tegola/config.toml
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

volumes:
  pgdata: